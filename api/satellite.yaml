openapi: 3.0.3
info:
  title: iShare Satellite
  description: |
    The subset of the iShare Satellite API
  version: "0.1"
tags:
  - name: Satellite

paths:
  /token:
    post:
      tags:
        - Satellite
      operationId: getToken
      summary: This endpoint is used to obtain an OAuth access token from the party.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenBody'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
  /trusted_list:
    get:
      tags:
        - Satellite
      operationId: getTrustedList
      summary: Used to obtain the iSHARE trusted list of certificate authorities.
      responses:
        '200':
          description: the trusted list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrustedListResponse'
  /parties:
    get:
      tags:
        - Satellite
      parameters:
        - $ref: '#/components/parameters/Eori'
        - $ref: '#/components/parameters/CertificateSubjectName'
      operationId: getParties
      responses:
        '200':
          description: The trusted parties
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartiesResponse'
  /party/{partyId}:
    get:
      tags:
        - Satellite
      parameters:
        - $ref: '#/components/parameters/PartyId'
      operationId: getPartyById
      responses:
        '200':
          description: Get the party with the requested id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyResponse'
        '404':
          description: No such party was found.
components:
  parameters:
    PartyId:
      name: partyId
      in: path
      required: true
      schema:
        type: string
    Eori:
      name: eori
      in: query
      required: false
      schema:
        type: string
    CertificateSubjectName:
      name: certificate_subject_name
      in: query
      required: false
      schema:
        type: string
  schemas:
    TokenBody:
      type: object
      description: Access Token request body
      properties:
        grant_type:
          type: string
          default: client_credentials
        client_id:
          type: string
          example: EU.EORI.HAPPYPETS
        scope:
          type: string
          default: iSHARE
        client_assertion_type:
          type: string
          default: urn:ietf:params:oauth:client-assertion-type:jwt-bearer
        client_assertion:
          type: string
          example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlHWnpDQ0JFK2dBd0lCQWdJVUlaSURFUVM2OE1xOENUMEhqbEp3V0lIQ3RXY3dEUVlKS29aSWh2Y05BUUVMQlFBd2VqRUxNQWtHQTFVRUJoTUNSRVV4RHpBTkJnTlZCQWdNQmtKbGNteHBiakVmTUIwR0ExVUVDZ3dXUmtsWFFWSkZJRVp2ZFc1a1lYUnBiMjRnWlM1V0xqRVVNQklHQTFVRUN3d0xRbUYwZEdWeWVYQmhjM014SXpBaEJnTlZCQU1NR2tWVkxrVlBVa2t1UkVWQ1FWUlVSVkpaVUVGVFUwbE9WRVZTTUI0WERUSXpNREV5TmpBMk5UWXpORm9YRFRJNE1ERXlOVEEyTlRZek5Gb3dnWmd4Q3pBSkJnTlZCQVlUQWtSRk1ROHdEUVlEVlFRSURBWkNaWEpzYVc0eER6QU5CZ05WQkFjTUJrSmxjbXhwYmpFWU1CWUdBMVVFQ2d3UFFtRjBkR1Z5ZVhCaGMzTWdUMjVsTVJZd0ZBWURWUVFEREExRlZTNUZUMUpKTGtSRlQwNUZNUjB3R3dZSktvWklodmNOQVFrQkZnNXZibVZBWm1sM1lYSmxMbTl5WnpFV01CUUdBMVVFQlJNTlJWVXVSVTlTU1M1RVJVOU9SVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFPRnViWnZtN3BJbG44MW1vM2lEb2h3dHk3QmdqZmFFUWR0QmxtOVF3dk5Wd3dKM3AyeGVvNmR6K29RZVlQMUp3c3ErZzh2aXM0OGxuVnZ6dExURkM2cFdQR091WTQ1RThaVFBEU0xWWmZod2hYemNiNmNyRTJQbWs0S2FLYjdvWTQvcjJTcFRnbDhHN0F5WmhzRDJNQkZ2aXJRZlkzVFFJeERaM045cWd0RFRoSWl4ckg1bThzcUY5L2lUL05TVEMrLzhJNnJya3pXYXpiNDVOVmlTTFI0R3lHTmNKcDhPOGxPZlVvQzArMWpJYVNDcnB6SHBYNU5OY0ppV290a2orandmcTdUSlhtOW5hQks4K0cwdFl1ZVZlaEpYdUFLOWZQdFVHelVpa2hON3FIMDdpQXFwanpkdjFnTzVkRVE5MWdsUjlUdDRJdDR3bWJtdGcvaGdjZ1EyMGdlaGpmRUNpaFYyVXR3QUhZdlJINUxNR1dHT1ZWZHNXZW1ENk1mNXRhdXFDcTUxWXZOaUpSRzhyRm5rMmh4bEFjc2djN3MzUHpKMHdRQlIvcTdhTlJ4bkl3Mjl0UjJrREgzdWIyZjFZZlVwOGVvWDlMNmV4VmxPdjgzSWgxNkxSRFZCazg2dHRKaDdqQi9tSTZjSEpRcXc2cUVsOHl5SkxFT3d4WEFPOW9KYTZRbG8yV3pDTkZLSCtGTG50UFU0RjZyQVZpcytXa3hSTjhia2lQd1pFVnNLRUJveDdpQkRjZEhZKzR0bE5hWlZ4c2prZDRNSXBCb1FMNGRESHIvTlRTVUFPNmpGcHZyVXgwRG9rK2NzNTdLK3NvdEFLazh0cHJmSHgyL2MzYkpsc2p0b1g4ekgzbTY3RVBENVVNQUFrRWhiVkpVdk9tcUJSalRJT3h4ZkFnTUJBQUdqZ2NVd2djSXdDUVlEVlIwVEJBSXdBREFSQmdsZ2hrZ0JodmhDQVFFRUJBTUNCYUF3TXdZSllJWklBWWI0UWdFTkJDWVdKRTl3Wlc1VFUwd2dSMlZ1WlhKaGRHVmtJRU5zYVdWdWRDQkRaWEowYVdacFkyRjBaVEFkQmdOVkhRNEVGZ1FVZmVDTXFoNlB2bi9KSzNiMGVDY3N3c3daeVB3d0h3WURWUjBqQkJnd0ZvQVVPU0FOZmZnWlFMYWpqUWx4aUFHOUI1ODRYTzB3RGdZRFZSMFBBUUgvQkFRREFnWGdNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01DQmdnckJnRUZCUWNEQkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQWdFQVhBZnV2a2U5c2lUSitRSitmRmdBdWdaTTFPWGRjWFFZRnVkOEx0RDRXVUNPTFZpR0w4Y3FzaDNoWGJXdVhFVVhRQWhNVStQSmRUSXNHN3JxbDJMend2R2xGZkZRUWFHMmxyQllRU2ZqeWdUWTdLdndGaHlTTWtPejFVdldqQ0dnVFNGblZhVHRyT0NGZ09ObzJlZHpRR1JFSWVyMTY2SkRqMjZYV2dLQWdaVnQzcUdwaVlCQjZXQTE5WWRtZTZHVnVEVXVvZTJ2TDA0Y3Y4NW5kZFh5U2FuWk5hUmorWnFhbkpDMGdMWm9Lb2pvOFhXNkJYT2hrVTNmdzVsYi9jaEptQVBqTHdnbDFEVzhHQkdWdWh1SkRPdnh4dFBtNXc0OWY1bEF4VmN0UjdHQ2xrMXRrUWRuaFVVbm5ueWw5SkN1K1YrUzZTbXVoajFIazRqa0RrYyt4bzJTT2c3MlE3bXNpQnNtVjlrUitRS09hcm85QmxjVkt6MllGQTQ4aU1zYVFVeTNTSmR1T0ZUc1lNeE04Zi9VVmhiU25Qc3BhMmFVOEp2S2toSHFQM2JjMmFxaUZmNU92c080RkJ6eVNLcjBSRXNQMDdoVTExTUhMUFQrNExsS1pvWSt6RDRtVFQ4U1h6Y1Q5cWhJOWxkdkxPNWJLeFJ0V3lhL2RYdUo2UXgxSzdtUFY3QjU4WEFRbmhINU9MclByOGRiVkQ4dGpDaVJ4ejNkUU91WXc3U1J4Ri81ZXRvZktzeWU5WTBHZVkwVEZyRjFlSVBsdDhiRmlNVjRRU2VpSEI3dU00TEp0RXZ6QTFHelFrQnNyVXVTWXFMRXRobXVCbXhYUUVCTm43YTg0Rkc2N09wWW95NlFpckdxdjg2K0Y5MENzMnMvWGJnOEg1VWpTVGlVQXJFPSIsIk1JSUY1RENDQTh5Z0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBRENCaURFTE1Ba0dBMVVFQmhNQ1JFVXhEekFOQmdOVkJBZ01Ca0psY214cGJqRVBNQTBHQTFVRUJ3d0dRbVZ5YkdsdU1SOHdIUVlEVlFRS0RCWkdTVmRCVWtVZ1JtOTFibVJoZEdsdmJpQmxMbFl1TVJRd0VnWURWUVFMREF0Q1lYUjBaWEo1Y0dGemN6RWdNQjRHQTFVRUF3d1hSVlV1UlU5U1NTNUVSVUpCVkZSRlVsbFFRVk5UUTBFd0hoY05Nak13TVRJMk1EWTBPVFEzV2hjTk16QXdOREk1TURZME9UUTNXakI2TVFzd0NRWURWUVFHRXdKRVJURVBNQTBHQTFVRUNBd0dRbVZ5YkdsdU1SOHdIUVlEVlFRS0RCWkdTVmRCVWtVZ1JtOTFibVJoZEdsdmJpQmxMbFl1TVJRd0VnWURWUVFMREF0Q1lYUjBaWEo1Y0dGemN6RWpNQ0VHQTFVRUF3d2FSVlV1UlU5U1NTNUVSVUpCVkZSRlVsbFFRVk5UU1U1VVJWSXdnZ0lpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElDRHdBd2dnSUtBb0lDQVFEWXpKSmtGeFRCWHlnWmlLbGswQ3VySFlWeEYycFV6dnFsSXFiUm94UHZkYnBhSFJ3MEZ4MDZsWlFyWlAvZEFkbEJrREVtbjhmc3JqSzl2dUFQWEc2SmRHNUtzTGNQNWZMNEJQNTNVcVk3Sktwc0t2azgzcWtyaWFoejdjeUh6bEU0eW95bmxxeS9iZkxNR3RWclJ5c24reE9MbktmbFlya0ovcXJaQlhVZWVhUllMb2lRWkNWa0ErbkZXbURKdmVYb0ZlVnd0ZXRjR3RiNGJvV3hyR0h4RzZJUXg5L0lYU0lWM3VHUll4VzNHTUlnd0IyOHg3QkRkQ08wK0FjZ0ZsS20ybWVoWjNGUXdmQzhleEE0UWgxTkhEWUlVejFJbHB2QVlkL1M2SVNqK3pMUnhrMGVHM0RCQVlndWcrNjRheVFuN0t3ekliMk53RFNWSkx1Qy91RzF0Z2xTZHhyTzJNc3Z5Ynd3OCtYV3dnTk0xZmlPK0JQbm5kUDY5SEcra1RKYlh2VnlXelNpVmplYk05R2pydVR5L01HaTZGeVNGd1UxbFhpeW5vVDcyYnBkT2xsTDNvSmUwU1kyQXV5NDFFVHBKUEdnK08vUS85RHpwaE1vMTZlU2pCSDA0N1VnUmxUcHM2dGNkK2l5ZHh4QTFENkR4TmRma0NBcGlYOGFQeGt4ZWJnMy95M2laVEd6ZTVzR3lNY0JtamdkZHREZ3B6WCtkMjhSUDN5OHFPc3NiNFdNR29HN2prQlhQRm5teno3Sll0RWs3S2hyS2VNNTlJSUhoZmtQNGI1a2Y1enJKZlZpSUQrcDIyaVFoVlNHa1hVOEZ3UUVTalZPU1RERU4zeHY2US9VSy8zeUdLQmYyRS9OVlhBZEpmU1QvS01EN0tSazFpY1Rob09OMndJREFRQUJvMll3WkRBZEJnTlZIUTRFRmdRVU9TQU5mZmdaUUxhampRbHhpQUc5QjU4NFhPMHdId1lEVlIwakJCZ3dGb0FVQ3lUUXBIYzRSQStKeXk5Uk45cEtHaWtVSGNBd0VnWURWUjBUQVFIL0JBZ3dCZ0VCL3dJQkFEQU9CZ05WSFE4QkFmOEVCQU1DQVlZd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dJQkFBTEhjbjBOQzF3OU00VytmY0JkTWg3MFdNSi9lK0xka2VFTHJNS3FOZFF1SUJiNmtsK2s3NzAxQ1A0ZXEzcXlQWXVsMVUzSDV4dkRVTWtSWDB3aDdHd2ZBMUxoYzNVc01YeEdMRXhoNDF5V3ZFRzhHUEFhSXhNa2lLZHlja0lVaVpVbThOZUd0Lzk0UnVhRE9YTUJMSUNONnE5WGhmejJZZ1EwV3RPUU13eXBuTHZxR1RQbWRQa3kyY3RHS3ZRY2lxeFh5NzRONC9oYllpbkc4WDg4TloyVGs4MmJMTy9YMllaUWF0L0EzVTVObm53bzB2andKcC9NMFRwcjFKNG4rR3hLUUc5cnFmeVBSYTlCeUVud29nSVlCN3o0N2hreGVZOGQySTEyczZUbWZMdlgrUHBLdXdHaFUwWGQ2UkNaZXQ3N3RleHNLYlFneUlPU3JsUHlrYzZlTTZSQVphK2NTQThrSkE4Y1BmUU4wMnNWWkdwSWdOM1U1NzVVT25PVEVETEw5dEZVUVZOdXRzMFd3aFZveXJtRGRMNkJaaWhtb2RMZlROUkRyVm93MjJiSkdGTkdVS3F4QjIxcExjalNxa0ZLQ0ZJTm9GNWJDcVZmZTNFYkNTMVE2UHJQczdBcEFwTktITXhocC9GU3BSc2NFQ0I5cXl5Mm1ROENyTDJZZXFWK0JtV3hPcVNBUUNvZlVKbnFScmpOKzIrcHpUZDFxWnRpd3FuU2wzS09uSzd5T0h6KysrRlpOdTAyU08yWjZrT2pkd1ZLMStxc052VjJlN3JNTE1kbHF0WjBhMFhsNDZ1eTZyUXN0YnI0V3ZvRkhnWXBHUk1Ea2piNTFHQ3VoUkMxV1krNm9zWHEvclViVE54SHVBRjNVZGlMU0MzbUJwTXpDZW9qcjBheiIsIk1JSUY4ekNDQTl1Z0F3SUJBZ0lVRms1dEhRSURvTEoweUdNajVObWZ2VlRWclNBd0RRWUpLb1pJaHZjTkFRRUxCUUF3Z1lneEN6QUpCZ05WQkFZVEFrUkZNUTh3RFFZRFZRUUlEQVpDWlhKc2FXNHhEekFOQmdOVkJBY01Ca0psY214cGJqRWZNQjBHQTFVRUNnd1dSa2xYUVZKRklFWnZkVzVrWVhScGIyNGdaUzVXTGpFVU1CSUdBMVVFQ3d3TFFtRjBkR1Z5ZVhCaGMzTXhJREFlQmdOVkJBTU1GMFZWTGtWUFVra3VSRVZDUVZSVVJWSlpVRUZUVTBOQk1CNFhEVEl6TURFeU5qQTJORGd4T0ZvWERUTXpNREV5TXpBMk5EZ3hPRm93Z1lneEN6QUpCZ05WQkFZVEFrUkZNUTh3RFFZRFZRUUlEQVpDWlhKc2FXNHhEekFOQmdOVkJBY01Ca0psY214cGJqRWZNQjBHQTFVRUNnd1dSa2xYUVZKRklFWnZkVzVrWVhScGIyNGdaUzVXTGpFVU1CSUdBMVVFQ3d3TFFtRjBkR1Z5ZVhCaGMzTXhJREFlQmdOVkJBTU1GMFZWTGtWUFVra3VSRVZDUVZSVVJWSlpVRUZUVTBOQk1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBdjNOVkNtZmRkWDlrbkdjUWVFaUl1OW1UMFJJSUlyRXg4MGhtWVkrd29XWmJUZmgyZndQV1kyNHZyY1ZBZHk0TTYxT252dy9TR0trNExsV3RsSlhYRFo3UDVaZVZzZ1RrRjNEemJkaHBmQTR6d29XS3QwTC9ZL3l4VjVZSU12RXNMMzNJa1hSQ1N5dFVPNVFTTmd3UDh6QkF1Z3FCWU5HbTNTQlNMdFBTdkFlTmZpY0szaExLZ2hrNVpLeG5uTjRPRk5QM3dDcERUR24wOW10Wi94RE1uQzhucjdzQ2wyN0xkT0hwZmtWU2RmY1Q1c0JjSTlBN3dqL2FDcERHOGRmK2RlM0o3ZUhSWHl1cmpWNUI4WFE5QUxkbzRpWmZTYVB5a0c4SU9uRG81N1ZVL3BkNi9WQjVUY2VDd3pxVWJXd3diMk9oalJtSkxSNHJocm15eWZITjFIZnVhaXZKeUtCWWhFRit6b25WN2FvaDE1Q25LUU01ZlowQVltYlQ1amo3aEhIU3ZpR1pVWU1jRk52SUpxaXlKYndsdmVsbXV5cE9ZcFFMbWg5TzhVUU1NUEd1blhSSjl6djhlMTB4ZU90Y0VrYTFhQXpHZmhvU3Q3R0RZRHRtNXh3eWEyLzBWWVlheE0wdmZsc2FkZitaZjhOL2o2WmRwQ3U3aVVnUnNGTjA2ZWZOY205VUg0QTcyQlFnWnY3ZUJRaXA5ZkF0WGZqSjQ1WkVOdXBJbjUxenFVb05Nb2VtT2lxTkNjTDhjZDRmcEJhQmQ1S080aFlteGRDVEVpOEVUblByOE84ZlY4aWUwZkRGTTJxS2RsczliVG9FMTlNOXIvYTlWSGwwZVBPOFVFSzdSemRVeTdSMnpvWE9ZdHljQUpadjJ3R0FJbExCS3EwYng5MVFFWU1DQXdFQUFhTlRNRkV3SFFZRFZSME9CQllFRkFzazBLUjNPRVFQaWNzdlVUZmFTaG9wRkIzQU1COEdBMVVkSXdRWU1CYUFGQXNrMEtSM09FUVBpY3N2VVRmYVNob3BGQjNBTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUhMTzlCRDludTdYeUpScWRDZThHSlVSMnNkQWRFZlFaMlZqTE9rK2tBSE8vbWZVSDljRWorZGJqbFMzdXRNWGhWYVhOUklyRXpORFBEcUdzdCs5S0RmWjdDSUR6cUtOZUx3MEtLWWdYOFRPSTNTN0diSHhxTy9JcW5GRXplR0s2S21PeG9menFhM3Z1UEtVeVN2OE1IN05hdndGdnkvRXFVcnVvK2NaVGVkdnM5UUF6bmV5SzNwa3d4OEhLTkZDTkNUUDQ4dzB4OG4yanozb2dxT3JDNkVjZXB4U2xyUkdXbW95QlV1L0NNVEQ4UTJUN1Fub0YyQlFsU2NmSjI0d2hpUEFNc3dKRjdqQk1CZmRMTnBsYmFmekxRQ3VkYzZMRzdpT2ZCWDhsRXgwV0VUZDZwd01JdGFmWnFnM3FtNW5BallGWGpPdVNPVzJvRlorMDFXS3YzVklKTUtIUEdMb3RpM1NYMUNPSEVCa0xORno1UHpleWZIS29lT1ZmUHdIMXdHZUszN3F2bWJIQVJPQ0JtVmtuNmVicm55bHhlZi9VK2VUODNFZmUvTEZCczJudUJYQk1rdGMrcVFBUDVyVHpDK3lVSWtzNDh6ZUJpQ2xpUHFZZUxQQTJ0bjNEVDAyUkpENDd1ZnoremFMcksxSUFmRFh6WUJubnVKb3YveTRHdy9qamdDTE9wOEgrUTVQenh1Q0g1T1k0MUlOeW80bDkrY2Z3MXJtKzJBaWFqYnhZQThycmFqdGw1eFp4VTY2dWR1ZGpLVFo2S1g2VzJvNHMwejJpN2tqTkZKZFFFbVIya1J6YlhrY1hQay81ZEFiUlZNSk9RZDRvVFVobEJHcnJkb2pNbWs1K25mdFhhUTZsL1JDaXRDTGxEM01EN0VLYlJzMXNMRFhzVU1HIl19
    TokenResponse:
      type: object
      description: The access token
      properties:
        access_token:
          type: string
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1YyI6WyJNSUlHaGpDQ0JHNmdBd0lCQWdJVVVsaUxQSzZSN09ldmlORFJZMmR0SS9HN1lRSXdEUVlKS29aSWh2Y05BUUVMQlFBd2dZd3hDekFKQmdOVkJBWVRBa1JGTVE4d0RRWURWUVFJREFaQ1pYSnNhVzR4SHpBZEJnTlZCQW9NRmtacGQyRnlaU0JHYjNWdVpHRjBhVzl1SUdVdVZpNHhDekFKQmdOVkJBc01Ba2xVTVJ3d0dnWURWUVFEREJOR1NWZEJVa1ZmU1U1VVJWSk5SVVJKUVZSRk1TQXdIZ1lKS29aSWh2Y05BUWtCRmhGbWFYZGhjbVZBWm1sM1lYSmxMbTl5WnpBZUZ3MHlNakV4TURrd056VTBNakJhRncweU56RXhNRGd3TnpVME1qQmFNSUdrTVFzd0NRWURWUVFHRXdKRVJURVBNQTBHQTFVRUNBd0dRbVZ5YkdsdU1ROHdEUVlEVlFRSERBWkNaWEpzYVc0eEVqQVFCZ05WQkFvTUNWTmhkR1ZzYkdsMFpURVlNQllHQTFVRUF3d1BSa2xYUVZKRlUwRlVSVXhNU1ZSRk1TTXdJUVlKS29aSWh2Y05BUWtCRmhSellYUmxiR3hwZEdWQVptbDNZWEpsTG05eVp6RWdNQjRHQTFVRUJSTVhSVlV1UlU5U1NTNUdTVmRCVWtWVFFWUkZURXhKVkVVd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUUM4U2ZoT0tud3NDcGN4Y0dYem9mYWY1T2ExVkFTWERxdjIxbFFRdFdzOUtCem9TSllESjREekg2TUxJVmJzTnJUZXVneUY3RDJ5Ymd6cXFRMTlpZ2VOajdQWlltYndselEvQjllUWFScEF3amRORjRoMWNRcFhWQ0xTTGE5L1d3dHhWNmhUZFRzLzllcjN0Q2lHaTFmQ2UxSGdnbC95a0VDNE94WXEzQ0F6bW5mSTdUd21JNzIxb0xkUFhrYnlNNDZJSGJRT3J5L2RLRlhqamFmM3l1cjQ2azlOZkVjM0VkM1c0dnFkSUxWRjFnakZVaVk4RVFWVE5jUjNSQlhpYVFnSHlFY2JmUGN6bFFPSzY3RXlhQSttSjFndzBBNUZGcWVHRnp1NnZDUFgvU2ZIVXpIdjBqQWd5aWcyUU9kTXk1QUQxRURzMUYxRE4wUVJDU280VElJcno5N3RBME91K0Y1cVZ1OUpxWWplUzkvQW9iZHM5Ty90UmpBeWc2dHFWRTBUaDlLeXl4dzlDSjNtMTMxNkpOcHU0QUlJSkJIYUVFL0VvOUZaL0paL1hyRm4wU3dkSm9nS3RHWCtBQ3VNdHNJc3V6UWZoVjRxY0haS1dCRytidFdGZWtxSlFFazBBMXVNVjhLaG95ZzA4aG9vMVErcDF1UGl4MkUwWDZVQVlEaEdnZER4R3huREVaZ0JMNHlRZ2pvV3pEZS9yQVBCanZsY2hkUEg5UVVnVXN4bFZhOHlpTnV5eDhwWmI0MHlLUkNTTDRJNU9XTGszNy9zWXF4c2xqcG9iaEpsMzkwWUUzNUxmaG1xS1pTaFZNbk5EZXhRUTkybytMRDdNUExoU3JWcUwwby9ERElsenVPZHlubG55cDVyQXpEaUJyLytCd0RxWVhoRXY1ZkdaUUlEQVFBQm80SEZNSUhDTUFrR0ExVWRFd1FDTUFBd0VRWUpZSVpJQVliNFFnRUJCQVFEQWdXZ01ETUdDV0NHU0FHRytFSUJEUVFtRmlSUGNHVnVVMU5NSUVkbGJtVnlZWFJsWkNCRGJHbGxiblFnUTJWeWRHbG1hV05oZEdVd0hRWURWUjBPQkJZRUZCd0dMWlI1ODN1MWcrYlR6eWw5bFFzRExvYTVNQjhHQTFVZEl3UVlNQmFBRkNkVlhhaTRwaVZyVkVEZy82TE51RjRmMG8wT01BNEdBMVVkRHdFQi93UUVBd0lGNERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFnWUlLd1lCQlFVSEF3UXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnSUJBSDlRR1dBTkpFaWtDZG9VQXByUlRiYXAyWXI0NEtVa3MzZGYvQmF3WW52V2ZUeEJmaE5aNWs5RmxuNXVHb09LYjdNWW1CQVEwWnVvb1ByYjZzclBaT0VPUmRsdXh4YkNncDlQb3VrT3ZMbUh5cGUxM21zQTB5SXZCdURMZ1BqNUhlc0oyZFNkVHdPVGhpc1pBb3YzQjYrZ3Q0TU10KzRXUEQyNGNmYkI3c1VnSlduVGFLekNqaXZMZHQrai95bVpGbDQxdGI1a0djS3YzT21ZWVRpeTVWNURNeGF0YVphcmdONzFtTTBRRWx4UjZrS1dna2dLNnNsY3Z3TUhPeW4rby9EZXpnb1VrZHRBN2d3YTlzRm53SG94YklkNDI3QlFkMEJkdEVWTXlpUXF1dFlxdVFiUXd3YkI2SzUrN3JjcGRzRlJsN096UW1tbGw2U0dLY2ptbTFzdFpBTmxaajQxbFdLZzVJRzBYdys4RWkzbEhMNjJpbVZGRDFZZ1B1QUFPY0NrTHB2bm9BdGNXdk1JbkFoVU1ldjhYdWtnckJPNHRkeUI4cXRlUWVsUkxZWXZXT2Y1Z3pzY2IvQjJnMThnNEt0U002SUdkOC9RenNVOWRKRTJlMFZjWFRna0lKZ1JWSVg1Vkp5NTNZeEhFc0tPV3FtNy90MmJhSlNGTGhTM2FEbWNDK0JVdG5RY09Rek1UeStJZGI5NnNVL3BVZEpDbUpCbEo2ZzRLZzR6c1pBaUZib3VaVWt6Rk85V0grZWxLaHFIWlJ3Nk1GRlo0U3JiOEpTcGtDaDdEUC9INVhES09Dc0d0Z1pLQ0hkMWJDMjltY2VybFlHUjZuTkw4MnViOFB3bFlBb203ZVZGaXdMcFp3S3AvaFFvQXRERjg0YkNOT3doUWJJdzNIVHEiLCJNSUlHQWpDQ0ErcWdBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURDQmt6RUxNQWtHQTFVRUJoTUNSRVV4RHpBTkJnTlZCQWdNQmtKbGNteHBiakVQTUEwR0ExVUVCd3dHUW1WeWJHbHVNUjh3SFFZRFZRUUtEQlpHYVhkaGNtVWdSbTkxYm1SaGRHbHZiaUJsTGxZdU1Rc3dDUVlEVlFRTERBSkpWREVTTUJBR0ExVUVBd3dKUmtsWFFWSkZYME5CTVNBd0hnWUpLb1pJaHZjTkFRa0JGaEZtYVhkaGNtVkFabWwzWVhKbExtOXlaekFlRncweU1qRXhNRGt3TnpNNU16ZGFGdzB6TURBeU1UQXdOek01TXpkYU1JR01NUXN3Q1FZRFZRUUdFd0pFUlRFUE1BMEdBMVVFQ0F3R1FtVnliR2x1TVI4d0hRWURWUVFLREJaR2FYZGhjbVVnUm05MWJtUmhkR2x2YmlCbExsWXVNUXN3Q1FZRFZRUUxEQUpKVkRFY01Cb0dBMVVFQXd3VFJrbFhRVkpGWDBsT1ZFVlNUVVZFU1VGVVJURWdNQjRHQ1NxR1NJYjNEUUVKQVJZUlptbDNZWEpsUUdacGQyRnlaUzV2Y21jd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURGYXdmVlZvVXFFL0hZY2dITlBqaks0eEhBNUNsV0l4NGx2WHNrQ3NoSzk1S25lUGRrT1NLOExocDVzUUIvSzBBNmJVOUlBN0xlTmhsb1RRMXUrcG4wSC9tbDBYQUgrMVFWbURVUnh5NTBtQzBGS3A0c2NNVnNXNlBzMjFBMlFhUllBRFpqOUJqRnQ3VWV1Q1dBdERYdXB1RXcvK1NQTG5EQnlmWTNuRW5oT1dlck5mZFhpQWhwMlNUWXBPYTFBL09UQVJMV3ovd0pTclR5bkM3c1djRS9RQ1c1WXVLK2tPSDFLeVVsRlkvTkxZKzduOUU2ckh0ZTJoakdTZ2llNEVIN3hwczJWTGNtSmhLZTVzVVhXY21vUG5JWTQyaU5nTUZjWXkweFFUOW9XWTRmb2hMOVF5NnlCMzBweUtGdXVlakYzOW50QjZWTUowSm96ZzgxNkNpZ0pvUDl5ak5tTlNMaE5HQ3A5c3FEODNxblY1bklKdG9RaWpDWmoxNXZZTGRLdkc3aU05amtPUDA5VjlrWTZRVVdCZUZUdUhlMG43N0Q0Rk1leTZyQzFHSGVOWFR3U09yZXRiRDl6bDlUeDlCTlBSc1g5TU5Lb1hpZjJzVDJlS0EwSUpzMmdVQVBDbmNWT1JNYXg2WXVYa2RaS0J5aFJpdE5sMzNwTExBVEFOemRnMllnSHdCZWdnWTFIZkZZRFZjKyt0MWNaVWl0SFRLWGVRNVlXK2IyUnMrNStkL2FOQThwQWlwR1pvTUw5R29FMmxEUFRGZWdqWG40dkRnN0ZhVkZJeTZHMUQ2VFdTbWI2V0o2Yit6QWszR2ZsYzN3dVlYdHBJNVl4NnlucGQrK09aN29WQ2NLbXU3YVNmRStLMmtlZmQwTWFJTTI4bWV1MHFRMTBqNDQ3UUlEQVFBQm8yWXdaREFkQmdOVkhRNEVGZ1FVSjFWZHFMaW1KV3RVUU9EL29zMjRYaC9TalE0d0h3WURWUjBqQkJnd0ZvQVVXY0V3QStVMGM1cFFObis1aGxYNUVoYWlaQ2N3RWdZRFZSMFRBUUgvQkFnd0JnRUIvd0lCQURBT0JnTlZIUThCQWY4RUJBTUNBWVl3RFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUVUQ044dVNaK0M3ZVRzNFNzc2NVVGl2bHcrZUk2Wmk3bHZQQWpSa0hMU3BDU2tndEg1RXArUXRYTGpqMWxpNE95TEw4MUc2VnZKcWVrdHIwQ0NrOTRBa3hMeTREWkhBV0J0QXZMMGs4VVlIdmRoU1pVQldoTWNSdW01MWc4eXZWRklKQ0tQZk9Dc2Z6YmpHS2RPa3Y0VDVSS0JyQWNGSUZDdkxkQmwxajdkSFJBUnRDeStHeXVwNG9QcWx1bHQ1Q090dlRKSjdZdmQ2TW1xZzhUYkR2RDRDNXZoN2s2d1QvYXIrcmxXaU1KOFZHOENwRUpELzdNR1dQM3dvSFJmNldVTkx4ajVWUnNTKzRPNmI1Y1hzcnJ4b2cxWWtrUk42WkR1SEc4TmRzZHVmRTJKeksyd09sZnhoR3NnUklWaGVRcVMza2d4WEVwZUZCOEZYSkt0NTdlK1JEM2ZucWg4VUErbmczZ2hJYW5XTDdrUEkwL2pRYzh5eG9aeEFaOHBqaVR1b1UySk83L2VZSEFMSi9HRmtEVGt5RERLWTJjYmlWRUZQRllNNmxMM09WN2RWOTlCUkdjbHYybml1bzJGZkwvWFRrVUpQQ2VBbkk3bjlOZ09LWStWWEQ1eUVmQXNMVnFabUFBbkpxWWNkcU4zV0FOZm4zMFE2d1JpYWltTFN3Uk1ZOGc0RFhzRnk4eE1pWmNmNHRLcExnL0lwL21VdU1OWkJ0S3BETVNDaWtNb1FpdXUxK0Fra0d0V0ltd3ZTM0puWGlwRUE2WnVBQllUSHpJR0VjYzc2VDNzZzlLSWdaVktSYTUxMGc3RjhDQWFhQVVrcVhQcG1XQzBTWGpaNTBzcklpRmluYUU4eDQ1QkVsbVdDSGxjSVQ5Z0t6a2F0cWJWT2pET1VLVkxwIiwiTUlJR0NUQ0NBL0dnQXdJQkFnSVVFNGVablJScWF1YjlrQyszUHFEWU5mVlU4SWN3RFFZSktvWklodmNOQVFFTEJRQXdnWk14Q3pBSkJnTlZCQVlUQWtSRk1ROHdEUVlEVlFRSURBWkNaWEpzYVc0eER6QU5CZ05WQkFjTUJrSmxjbXhwYmpFZk1CMEdBMVVFQ2d3V1JtbDNZWEpsSUVadmRXNWtZWFJwYjI0Z1pTNVdMakVMTUFrR0ExVUVDd3dDU1ZReEVqQVFCZ05WQkFNTUNVWkpWMEZTUlY5RFFURWdNQjRHQ1NxR1NJYjNEUUVKQVJZUlptbDNZWEpsUUdacGQyRnlaUzV2Y21jd0hoY05Nakl4TVRBNU1EY3lORFUyV2hjTk16SXhNVEEyTURjeU5EVTJXakNCa3pFTE1Ba0dBMVVFQmhNQ1JFVXhEekFOQmdOVkJBZ01Ca0psY214cGJqRVBNQTBHQTFVRUJ3d0dRbVZ5YkdsdU1SOHdIUVlEVlFRS0RCWkdhWGRoY21VZ1JtOTFibVJoZEdsdmJpQmxMbFl1TVFzd0NRWURWUVFMREFKSlZERVNNQkFHQTFVRUF3d0pSa2xYUVZKRlgwTkJNU0F3SGdZSktvWklodmNOQVFrQkZoRm1hWGRoY21WQVptbDNZWEpsTG05eVp6Q0NBaUl3RFFZSktvWklodmNOQVFFQkJRQURnZ0lQQURDQ0Fnb0NnZ0lCQU9vUG5YQXRXRkc2QnNkcjRUdkJVVzEyd3BjUllIOWZpRG01TWM2ZzZWZGlMOUkxdFdNYmhmTzdEUHlPYW9xaDZ4bG9ETCtYb2VSRW1vSWZKSnBZM2JkdXpQc3dUaW5hTWQ3SCthTVA2d1dEc0FJQUJobXc1UHVpM1VicFVaZUZlbzNSTWU1ZjhKakw0S1BnaldDWDFsbHhPNnl4eTFlOGdTZkdwQmtFSHBKYzhsS1F3REU5emd5dWlPTFJVUFJ0U2UwTkphamNCcnJYaWFTUEdkWHZHMzlOWXpqQUFSbzVQQUVCRytVSEh6WkZlUzExTVQrR2JyeVpyeDlLYmRtVnNoZGxzR3FMLzJzVFk5dmVGcno1M1hMUkdtcTg2VStJUVpFRXZwNlo1azVad2FtQmlBQ2lSRGJTd2gxTmdwK0JLTkcyNndDdkI0Z2Z4VE91U0hJZnpSa1BEOHZkVjdtWnd5ZUZIWG9nc05xRi84UG1keTBPTmNxVGhoN3c3bFVGTVZ5Z2s5cTUzMW42UUdSUnB3Q2dLQWp5allONXIyTW82OCt0bXhOQ2VqSVBwby9Kc0FFS2xQc2g5bEg3S2hTRWpJYUh4Ly9RMmYvbmxsMVo0R2tYajdTa0FMejNQNGxqVDNlUGVUMndubFNweXJDRVBJZU1YVDQ3WjJ4ZGM5TWdYaHF4aWRlcDdzVVdGTWFKd0tocTFtMVVKWEkyMTZHS1VOM3kvL1dTdlJ1N3Rxenl1VVI5cXNmWTk0NkVVRjZtNFhRamo5d2tlNkg3dlRwWTlVL3p3YzlqeXgrZlhuSml1WWh0NmsyY0hhdjlHSzB3blo1Q3Q2QTErNDNlUlI0M0VKMTFPTTlNbCtKNHRkZnVrU3JXNnBwbXorNFl4ZmU1UlJ0elBlWHhuY2piQWdNQkFBR2pVekJSTUIwR0ExVWREZ1FXQkJSWndUQUQ1VFJ6bWxBMmY3bUdWZmtTRnFKa0p6QWZCZ05WSFNNRUdEQVdnQlJad1RBRDVUUnptbEEyZjdtR1Zma1NGcUprSnpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFER0Z4RWxDMlNxNi9FT2NielE3dGphcWM1ZHYyRkNXVFRRWVFMaVMrVlFxY0pxR25NbkV3V1VEQ2VhY1E2QmF4ZFRXK2piMXpYNjZEZ2ZOSjQwWXIyWURWdjRxcitLS0NXK3E4Y0tRVXRlL1htY3BMSnRyWHRZWlFNZUxVZndCbEYyeUF2bWIzLzJjZGEwVkloc2VtMkJJRkNFMjI3K3dPWXFIU3Fwa3FmVmNpemxqbllMVHd2VEJRejVQMEpxOS93UGNqQjdmeGZrbzJtWmphUFFGZkV1TFBNVEp0dHY3NzExVEpDcnAwZ3ptbklDUzFCYTN2dGNkWk4rcmQ2SW9TUW11ZG5PY0dESmtzbEw3N1Q0QnpqWERrYXhmdUNvUTZmL2h3WEp1SkYzZlFIZDZPc0pIRGdWQUpRNzhOeWI1UC8yS01wZFkvbmt1ZGVCRzNaY0VKUDd1cHRjUW5XbU1NTGJmdUd1WG1Bdlh5S0pKM2J3MDFGOStWZm81T0x1ZDRJVm52MFFEbFhMSEJEZEdFckJUVDZtNVhaTlN5QlhicXAxeEl1aStKdWZtNEhZMFk3a1gwUXpmU0hkTVhXZ2lJZG1SOHoweDE1UFFnL3VGaWhYanAvUnlxRHJHK1RpbjNUWEJxSlJkRHhZQ3dkbm91dFFucXRZQ2JzaWRvTHYyWkEwdlFpR2Z5a1BNcFU0OWRHS3dWQ1pCdzF5TGY4WDBRRzVWeHA5TzQyalh6U3k1cll3ckY3NkZUcHkraDdVcW1aTk9CWEpHMXJvS3JRV1oyT2llRk1wL3JURFlVUnlocVdxcVcydTdVZWhZczZlbW1Td1l2OGowdjRDenBINTE3anAyUkpOeWluSTNUWm1nRDBBQUt6eUpBbC9acWF0OHQvYmFUUzNUVWRJS2c9PSJdfQ.eyJhdWQiOiJFVS5FT1JJLkZJV0FSRVNBVEVMTElURSIsImlzcyI6IkVVLkVPUkkuRklXQVJFU0FURUxMSVRFIiwiY2xpZW50X2lkIjoiRVUuRU9SSS5QQUNLRVRERUxJVkVSWSIsIm5iZiI6MTY4MzEwODUzMiwiZXhwIjoxNjgzMTEyMTMyLCJzY29wZSI6WyJpU0hBUkUiXX0.r90LAdcOOnGiKIaM1qn4PV_Vc6La3PT1q-cmV7wRGleMx9n-1X672da1I8rvtvN0LTUKYQ-e7nv_DAw_-9gA8N78-O9HaGG7D8iqFDMvKiDGLUpy15lOeFEYqO2meZbqAPeP1B9FxYhUMBRz1IZALs4iXXBQ1j4zTa8wgA4yzGkkdDf1iDQZDHLYUaQzqyBV8r9AOTISDzh86f1NeKoqi8clCVsLNi99DY8fERT0Ldnah_Yxet0M9E-b8SxjV5gQfTAwvhB1IkxO1OhulLexLlsXWRNKkuLORdTnobxMnQxgQQHte7bD34abM9hEBC3CQlsFaJ0rKKZrQwfJh7Z03v2pm80rJM8Xma8FcqzWNL2YmRdCGpnEVMP2gTh1pIyiAU0npYlVfGuLUyWfbgobTABgv0E7gNeqJBwNu6bnVsnn4kzzZROM7VJqLg3iC5se6oa_p76ecV2uEjrdH7gE7QNROFLuR425-5jRCch2lFdjGyDwzxHrQVdB-qhvzr4G03Ay-2UupWVrs9iitKxLMystPC0R1RGwfHxOd0PbPwKl81EvnKEb4wdeJy1ipUWu_5PYfStFJsS_vQDliHCfJkfROOCSETTHDRribq0FdDJwWcQpkCo_FswKpHwijWT5Ej8AXeTqaAMJ_RsH_byYvqyabLK0T7N8QR6ymg5uBnY
        expires_in:
          type: integer
          example: 3600
        scope:
          type: string
          default: iSHARE
        token_type:
          type: string
          default: Bearer
    TrustedListResponse:
      type: object
      properties:
        trusted_list_token:
          type: string
    PartiesResponse:
      type: object
      properties:
        parties_token:
          type: string
    PartyResponse:
      type: object
      properties:
        party_token:
          type: string
    PartiesInfo:
      type: object
      properties:
        count:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Party'
    PartyInfo:
      type: object
      properties:
        party_info:
          $ref: '#/components/schemas/Party'
    Party:
      type: object
      properties:
        party_id:
          type: string
        party_name:
          type: string
        adherence:
          $ref: '#/components/schemas/Adherence'
        certificates:
          type: array
          items:
            $ref: '#/components/schemas/Certificate'
    Adherence:
      type: object
      properties:
        status:
          type: string
        start_date:
          type: string
        end_date:
          type: string
    Certificate:
      type: object
      properties:
        subject_name:
          type: string
        certificate_type:
          type: string
        enabled_from:
          type: string
        x5c:
          type: string
        x5t#S256:
          type: string
    TrustedList:
      type: array
      items:
        $ref: '#/components/schemas/TrustedCA'
    TrustedCA:
      type: object
      properties:
        subject:
          type: string
        certificate_fingerprint:
          type: string
        validity:
          type: string
        status:
          type: string
